(trigger
    (key [[enter]]))

(name [Enter in Brackets or Parens Scope])

(only-in [(meta.brackets.matlab|meta.brackets.octave) - string.quoted.single.matlab,(meta.parens.matlab|meta.parens.octave) - string.quoted.single.matlab,(meta.brackets.curly.matlab|meta.brackets.curly.octave) - string.quoted.single.matlab])

(input document scope)

(output snippet)

(save nothing)

(script `#!/usr/bin/env ruby

textarray = STDIN.readlines
currentline = ENV['TM_LINE_NUMBER'].to_i
numlines = textarray.size.to_i
lineindex = ENV['TM_LINE_INDEX'].to_i
thisline = ENV['TM_CURRENT_LINE']
columns = ENV['TM_LINE_INDEX'].to_i


if (textarray.size == currentline) && (textarray.last.length == lineindex)
    # We're at the very end.
    if thisline.slice(0...lineindex).slice(/(\)|\])$/)
        # We're outside closed brackets/parens. Just insert an enter
        print "\n"
    else
        print " ...\n"
    end
else
    # Let's add some dots. If we already have a dot or two, we won't print all three dots
    dots = thisline.slice(0...lineindex).slice(/\.+$/).to_s.length
    case dots
    when 0
        print " ..."
    when 1
        print ".."
    when 2
        print "."
    end
    print "\n"
end
`)